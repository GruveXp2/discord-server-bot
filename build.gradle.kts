import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    `maven-publish`
    id("com.gradleup.shadow") version "9.0.0-beta13"
}


repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    api(libs.net.dv8tion.jda)
}

val buildNumberFile = file("build-number.txt")
val buildNumber: Int = if (buildNumberFile.exists()) {
    val currentBuildNumber = buildNumberFile.readText().trim().toInt()
    buildNumberFile.writeText("${currentBuildNumber + 1}")
    currentBuildNumber + 1
} else {
    buildNumberFile.writeText("1")
    1
}

group = "org.gruve"
version = "0.1"
description = "Tribes-Bot"
java.sourceCompatibility = JavaVersion.VERSION_21

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
}

tasks.register("incrementBuildNumber") {
    doLast {
        val currentBuildNumber = buildNumberFile.readText().trim().toInt()
        val newBuildNumber = currentBuildNumber + 1
        buildNumberFile.writeText(newBuildNumber.toString())
        println("Build number incremented to $newBuildNumber")
    }
}

tasks.register("renameJar") {
    val jarFile = layout.buildDirectory.file("libs/${project.name}-${project.version}.jar")
    val renamedFile = layout.buildDirectory.file("libs/${project.name}.jar")

    doLast {
        val jar = jarFile.get().asFile
        val renamed = renamedFile.get().asFile

        if (jar.exists()) {
            if (renamed.exists()) {
                // Delete the existing renamed file
                println("Deleting existing JAR file: ${renamed.name}")
                renamed.delete()
            }
            println("Renaming JAR file from ${jar.name} to ${renamed.name}")
            jar.renameTo(renamed)
        } else {
            println("No JAR file found to rename.")
        }
    }
}

tasks.named<Jar>("jar") {

    manifest {
        attributes["Main-Class"] = "org.gruve.Main"
    }
    finalizedBy("renameJar")
}

tasks.named<ShadowJar>("shadowJar") {
    manifest {
        attributes["Main-Class"] = "org.gruve.Main"
    }
}